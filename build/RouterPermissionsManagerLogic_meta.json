{"compiler":{"version":"0.8.12+commit.f00d7308"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"RouterPermissionsManagerLogic__acceptProposedRouterOwner_notElapsed","type":"error"},{"inputs":[],"name":"RouterPermissionsManagerLogic__onlyProposedRouterOwner_notProposedRouterOwner","type":"error"},{"inputs":[],"name":"RouterPermissionsManagerLogic__onlyProposedRouterOwner_notRouterOwner","type":"error"},{"inputs":[],"name":"RouterPermissionsManagerLogic__onlyRouterOwner_notRouterOwner","type":"error"},{"inputs":[],"name":"RouterPermissionsManagerLogic__proposeRouterOwner_badRouter","type":"error"},{"inputs":[],"name":"RouterPermissionsManagerLogic__proposeRouterOwner_notNewOwner","type":"error"},{"inputs":[],"name":"RouterPermissionsManagerLogic__removeRouter_notAdded","type":"error"},{"inputs":[],"name":"RouterPermissionsManagerLogic__removeRouter_routerEmpty","type":"error"},{"inputs":[],"name":"RouterPermissionsManagerLogic__setRouterRecipient_notNewRecipient","type":"error"},{"inputs":[],"name":"RouterPermissionsManagerLogic__setupRouter_amountIsZero","type":"error"},{"inputs":[],"name":"RouterPermissionsManagerLogic__setupRouter_routerEmpty","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"router","type":"address"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"RouterAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"router","type":"address"},{"indexed":true,"internalType":"address","name":"prevOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"RouterOwnerAccepted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"router","type":"address"},{"indexed":true,"internalType":"address","name":"prevProposed","type":"address"},{"indexed":true,"internalType":"address","name":"newProposed","type":"address"}],"name":"RouterOwnerProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"router","type":"address"},{"indexed":true,"internalType":"address","name":"prevRecipient","type":"address"},{"indexed":true,"internalType":"address","name":"newRecipient","type":"address"}],"name":"RouterRecipientSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"router","type":"address"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"RouterRemoved","type":"event"}],"devdoc":{"events":{"RouterAdded(address,address)":{"params":{"caller":"- The account that called the function","router":"- The address of the added router"}},"RouterOwnerAccepted(address,address,address)":{"params":{"newOwner":"- The address of the new owner of the router","prevOwner":"- The address of the previous owner of the router","router":"- The address of the added router"}},"RouterOwnerProposed(address,address,address)":{"params":{"newProposed":"- The address of the new proposed","prevProposed":"- The address of the previous proposed","router":"- The address of the added router"}},"RouterRecipientSet(address,address,address)":{"params":{"newRecipient":"- The address of the new recipient of the router","prevRecipient":"- The address of the previous recipient of the router","router":"- The address of the added router"}},"RouterRemoved(address,address)":{"params":{"caller":"- The account that called the function","router":"- The address of the removed router"}}},"kind":"dev","methods":{"acceptProposedRouterOwner(address,uint256,RouterPermissionsManagerInfo storage)":{"params":{"router":"Router address to set recipient"}},"proposeRouterOwner(address,address,RouterPermissionsManagerInfo storage)":{"params":{"proposed":"Proposed owner Address to set to router","router":"Router address to set recipient"}},"removeRouter(address,RouterPermissionsManagerInfo storage)":{"params":{"router":"Router address to remove"}},"setRouterRecipient(address,address,RouterPermissionsManagerInfo storage)":{"details":"Router should only be able to set this once otherwise if router key compromised, no problem is solved since attacker could just update recipient","params":{"recipient":"Recipient Address to set to router","router":"Router address to set recipient"}}},"version":1},"userdoc":{"events":{"RouterAdded(address,address)":{"notice":"Emitted when a new router is added"},"RouterOwnerAccepted(address,address,address)":{"notice":"Emitted when the owner of router is accepted"},"RouterOwnerProposed(address,address,address)":{"notice":"Emitted when the owner of router is proposed"},"RouterRecipientSet(address,address,address)":{"notice":"Emitted when the recipient of router is updated"},"RouterRemoved(address,address)":{"notice":"Emitted when an existing router is removed"}},"kind":"user","methods":{"acceptProposedRouterOwner(address,uint256,RouterPermissionsManagerInfo storage)":{"notice":"New router owner must accept role, or previous if proposed is 0x0"},"proposeRouterOwner(address,address,RouterPermissionsManagerInfo storage)":{"notice":"Current owner or router may propose a new router owner"},"removeRouter(address,RouterPermissionsManagerInfo storage)":{"notice":"Used to remove routers that can transact crosschain"},"setRouterRecipient(address,address,RouterPermissionsManagerInfo storage)":{"notice":"Sets the designated recipient for a router"}},"version":1}},"settings":{"compilationTarget":{"vault/connext/RouterPermissionsManagerLogic.sol":"RouterPermissionsManagerLogic"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":10000},"remappings":[]},"sources":{"vault/connext/RouterPermissionsManagerLogic.sol":{"keccak256":"0x50ec5d8cd07ecc8b42b2546b85bbde2bb11c61981e1dda5a8b9fe852a31f2e0e","license":"UNLICENSED","urls":["bzz-raw://ee7a674225a31e14620b586725fa7a5b52ddcd083994ee1f7e45c5ef18c441ff","dweb:/ipfs/Qme2PpPzvCwmFqDDgZC4ysS6P617NagK8tPt71kFoFTRh4"]}},"version":1}