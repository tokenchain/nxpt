{"compiler":{"version":"0.8.12+commit.f00d7308"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"originAndNonce","type":"uint64"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Receive","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint32","name":"toDomain","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"toId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"fastLiquidityEnabled","type":"bool"},{"indexed":false,"internalType":"bytes32","name":"externalHash","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"Send","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"DUST_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRE_FILL_FEE_DENOMINATOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRE_FILL_FEE_NUMERATOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VERSION","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"connext","outputs":[{"internalType":"contract IConnext","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_domain","type":"uint32"},{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address","name":"_custom","type":"address"}],"name":"enrollCustom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_domain","type":"uint32"},{"internalType":"bytes32","name":"_router","type":"bytes32"}],"name":"enrollRemoteRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_origin","type":"uint32"},{"internalType":"uint32","name":"_nonce","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"}],"name":"handle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenRegistry","type":"address"},{"internalType":"address","name":"_xAppConnectionManager","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"liquidityProvider","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oldRepr","type":"address"}],"name":"migrate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"remotes","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint32","name":"_destination","type":"uint32"},{"internalType":"bytes32","name":"_recipient","type":"bytes32"},{"internalType":"bool","name":"_enableFast","type":"bool"},{"internalType":"bytes32","name":"_externalHash","type":"bytes32"}],"name":"send","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_connext","type":"address"}],"name":"setConnext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_xAppConnectionManager","type":"address"}],"name":"setXAppConnectionManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tokenRegistry","outputs":[{"internalType":"contract ITokenRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"xAppConnectionManager","outputs":[{"internalType":"contract XAppConnectionManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"events":{"Receive(uint64,address,address,address,uint256)":{"params":{"amount":"The amount of tokens being received","liquidityProvider":"The account providing liquidity","originAndNonce":"Domain where the transfer originated and the unique identifier for the message from origin to destination, combined in a single field ((origin << 32) & nonce)","recipient":"The address receiving the tokens; the original recipient of the transfer","token":"The address of the local token contract being received"}},"Send(address,address,uint32,bytes32,uint256,bool,bytes32,bytes)":{"params":{"amount":"the amount of tokens sent","fastLiquidityEnabled":"True if fast liquidity is enabled, False otherwise","from":"the address sending tokens","toDomain":"the domain of the chain the tokens are being sent to","toId":"the bytes32 address of the recipient of the tokens","token":"the address of the token contract"}}},"kind":"dev","methods":{"enrollCustom(uint32,bytes32,address)":{"params":{"_custom":"the address of the custom implementation to use.","_domain":"the domain of the canonical Token to enroll","_id":"the bytes32 ID of the canonical of the Token to enroll"}},"enrollRemoteRouter(uint32,bytes32)":{"params":{"_domain":"The domain of the remote xApp Router","_router":"The address of the remote xApp Router"}},"handle(uint32,uint32,bytes32,bytes)":{"params":{"_message":"The message","_nonce":"The unique identifier for the message from origin to destination","_origin":"The origin domain","_sender":"The sender address"}},"migrate(address)":{"details":"This is explicitly opt-in to allow dapps to decide when and how to upgrade to the new representation.","params":{"_oldRepr":"The address of the old token to migrate"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"send(address,uint256,uint32,bytes32,bool,bytes32)":{"params":{"_amount":"The token amount","_destination":"The destination domain","_enableFast":"True to enable fast liquidity","_recipient":"The recipient address","_token":"The token address"}},"setConnext(address)":{"details":"Transacion manager and bridge router store references to each other","params":{"_connext":"the address of the transaction manager implementation"}},"setXAppConnectionManager(address)":{"params":{"_xAppConnectionManager":"The address of the xAppConnectionManager contract"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"BridgeRouter","version":1},"userdoc":{"events":{"Receive(uint64,address,address,address,uint256)":{"notice":"emitted when tokens are dispensed to an account on this domain emitted both when fast liquidity is provided, and when the transfer ultimately settles"},"Send(address,address,uint32,bytes32,uint256,bool,bytes32,bytes)":{"notice":"emitted when tokens are sent from this domain to another domain"}},"kind":"user","methods":{"enrollCustom(uint32,bytes32,address)":{"notice":"Enroll a custom token. This allows projects to work with governance to specify a custom representation."},"enrollRemoteRouter(uint32,bytes32)":{"notice":"Register the address of a Router contract for the same xApp on a remote chain"},"handle(uint32,uint32,bytes32,bytes)":{"notice":"Handles an incoming message"},"migrate(address)":{"notice":"Migrate all tokens in a previous representation to the latest custom representation. This works by looking up local mappings and then burning old tokens and minting new tokens."},"send(address,uint256,uint32,bytes32,bool,bytes32)":{"notice":"Send tokens to a recipient on a remote chain"},"setConnext(address)":{"notice":"Sets the transaction manager."},"setXAppConnectionManager(address)":{"notice":"Modify the contract the xApp uses to validate Replica contracts"}},"version":1}},"settings":{"compilationTarget":{"vault/nomad/BridgeRouter.sol":"BridgeRouter"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":10000},"remappings":[]},"sources":{"vault/interfaces/IBridgeToken.sol":{"keccak256":"0xc9e5b86c5ed51f25d5443906e81488e4da7ac56a0f908bc605665e139f902be9","license":"MIT OR Apache-2.0","urls":["bzz-raw://54be53be934f5ab2876f87b9dde241a251251cbc4789a1309d43332edb9fe3ef","dweb:/ipfs/QmUKydSHBUCvp8vg5Xc2MJuVeUiVdbHF1qWjD3gAx2w4gs"]},"vault/interfaces/IConnext.sol":{"keccak256":"0x7ad0814c531330080539bb0600462abf49af681bda0fc1c9a60ed8ca0a2fb757","license":"UNLICENSED","urls":["bzz-raw://25e0b70973d900fe2917a8732136d5b33c666c80b25d259ed1b1ba2b341243ed","dweb:/ipfs/QmPxcjdHLUQmKftVf78PFHuxearqmBu8au2k8JCf5tc4p5"]},"vault/interfaces/IMessageRecipient.sol":{"keccak256":"0x0c9dfa692a7f103f2dadf01d6939f9946dfd14915bfbb830525da3fc94db5f0b","license":"MIT OR Apache-2.0","urls":["bzz-raw://93082301cfc65757e1306e2480c62cae9baff763239308632f983565b6f7298f","dweb:/ipfs/QmRtpuY3Rn4euT2wKVKdy8ZBWRNGVeNAijpMFKN2DX8ksQ"]},"vault/interfaces/ITokenRegistry.sol":{"keccak256":"0xd51a3c2a9d61a0eb2ba83e5c4fd9f32e529c3898f0b15937d137a07028477ee1","license":"MIT OR Apache-2.0","urls":["bzz-raw://cf6d9b21396326ef2d97f196ab16c81b4dff97ee8ba1b1c01521aebfed952a75","dweb:/ipfs/QmYAfC1gZnyZq225SBTxNpWy8iceWNssgXxoRJp1jcTDoJ"]},"vault/interfaces/IUpdaterManager.sol":{"keccak256":"0xd100254c1e066473d303174ec14615f12122bce35bddc794c0e49d6df95ca0bc","license":"MIT OR Apache-2.0","urls":["bzz-raw://c337cc155f20c4fb126627c503e8ed7f31bf7b0e217d75d9648ca2c254325171","dweb:/ipfs/Qma4RgyFwpJN2GkR7gmJWHS9Sp9m2NwtCtSMsDnMqMQAJS"]},"vault/lib/MerkleLib.sol":{"keccak256":"0xf297da90e669fa6030407ff7218c2e78a109de7c8cd04c0d82d40d1a61a41999","license":"MIT OR Apache-2.0","urls":["bzz-raw://d272de5946822a21c77ef98b835f157424f19348c1938594019f14a3e1140f78","dweb:/ipfs/Qmac25few1VuzwzCBBwX6BoTbcXwoWNBv6Pa26EDjvb5hQ"]},"vault/lib/Message.sol":{"keccak256":"0xe0704a188b84a82fdee9bc0d2ed139649bda554e787cd8482041e262828b0b98","license":"MIT OR Apache-2.0","urls":["bzz-raw://f65535f8dd0f3707249f69befd4c74ef74b7688b578fcabf10e0817bbab409c0","dweb:/ipfs/QmeDpTVVJ4QYnhvTdJfEoXRksACw4tK6xxnZZScciEMmm7"]},"vault/lib/QueueLib.sol":{"keccak256":"0x44f62140867993d5339d1abc00b852a3e38adde65e2f9bda741ab7f3e0f178d3","license":"MIT OR Apache-2.0","urls":["bzz-raw://b5214a9d0bb39939f3d971cdc5e0f344d22884911bd4b3be0bc1945402192db3","dweb:/ipfs/QmZPrrGK4Z5mHdGC3uRMqvYtCnR94XnyudtkzseSE44ChT"]},"vault/lib/TypeCasts.sol":{"keccak256":"0xa572a0757d1408e12330f02797596e6d2315580e872cd4acd681c3ab09555b71","license":"MIT OR Apache-2.0","urls":["bzz-raw://cd9d68a1d7884e6a1f45c392e284aab3ba1e73ff2e6f0bd0fbd023b801c0fc45","dweb:/ipfs/QmVp63N9yUp7dUpnALCYpabZKtdD3ZbXGaBMsL2sn8NeB6"]},"vault/lib/TypedMemView.sol":{"keccak256":"0xaaa1d49d3ca939e49b369adcf5bf028d0d259821af57d4fa4229177eb8932936","license":"MIT OR Apache-2.0","urls":["bzz-raw://10691d24a257dc2e79cd779812c52571474239c9b1989fc63a803d5936b14fec","dweb:/ipfs/QmVERCmFdsEeuVpS2BxvJUttRaaDf6W7FjQJRFX2qnBU98"]},"vault/nomad/BridgeMessage.sol":{"keccak256":"0x0bb5242debd7af9b80f00c48224d4d237e0a6abcdd0d7f59bbca9a0cd21fdf05","license":"MIT OR Apache-2.0","urls":["bzz-raw://d4749bbce9cdf7b84b0c1eaa447e27d3aef4e6a29afd548d8c9698f26e9c082b","dweb:/ipfs/QmYwMT3kEqvF4fVg3eVdHJ9R9HwxAigX3VuPqQjiRFCzGi"]},"vault/nomad/BridgeRouter.sol":{"keccak256":"0x02bc65a79cab021a5ba4eed0ca24fd4bd29d65cef0acb7f135dcb81c54c87d5b","license":"MIT OR Apache-2.0","urls":["bzz-raw://c4b4542be97913b245bbc3cdbfd92c0084989fd16e39e8727094d7a8022ad9a5","dweb:/ipfs/QmWkmqMHjZ9BM3RSricjXZAppMRmUVyECUncbHdXLVfeax"]},"vault/nomad/Home.sol":{"keccak256":"0xc9ef0ddbaadbb7546f6647a252aa230189fb37f4641aa6f0b065b603217297f7","license":"MIT OR Apache-2.0","urls":["bzz-raw://bf53197afe80c2cc2212d604a36f2d781f08652b141c9158cc43a0276a3a50b9","dweb:/ipfs/QmeEjJWY4JbmEwQ5zQVTj3secVLna14LF2BC63vptc5eaS"]},"vault/nomad/Merkle.sol":{"keccak256":"0x20a2c4d61c3b0c205e6eb1b047e037f7a37bebb75a5dc72a727969eb8ad7e586","license":"MIT OR Apache-2.0","urls":["bzz-raw://8710de867869bbaa30c99ce329ec65fa67768831ad9a0d117c3dc488b6b22376","dweb:/ipfs/QmWpocCKhaAAJzhboHgmZyGWsbAjSKAMQsa5UhDYB6LsJN"]},"vault/nomad/NomadBase.sol":{"keccak256":"0x2cb0c4eb4c499a947ed221dc7de88e0922be6509b1132b46431b0ffe0c8e2aaf","license":"MIT OR Apache-2.0","urls":["bzz-raw://7684740e712522aa97028a8c373d30ce225a756a64cdfaefb919bd1fe05999e6","dweb:/ipfs/Qmcf9QvJo9QbGkAS92DnaXemUX9XkXdEWjmkd9gQjogFoo"]},"vault/nomad/Queue.sol":{"keccak256":"0xf4ce75ed377fbbfa4489f5e3697111e90ce27e0c7fb0750fe4a03144dda46b80","license":"MIT OR Apache-2.0","urls":["bzz-raw://41604799d79065bd904cfef59af69c0d12e323ca79987bd600cba667fc04b427","dweb:/ipfs/QmbL4qCAu4FeSnq3JrsKnA9VcoikiuZocSwKYXpGtdv3qL"]},"vault/nomad/Replica.sol":{"keccak256":"0xef03d37a5cacf8476599f9269bd5b5e26bc094d8cf4c75d4a7bcd3d0d15a2fd5","license":"MIT OR Apache-2.0","urls":["bzz-raw://e8d26fc806d6f024856b46928f1f0725f606ffd30bbfd669f0a3b4b31c594290","dweb:/ipfs/QmbR5Zz8oorfRvCtRvhAFMN1w3JQWy4Bc4zZj9FCnNcRhC"]},"vault/nomad/Router.sol":{"keccak256":"0xcc02b4847ecee0dcba7fb94111ccd6cc3322d2d0b30c3ee6455000ba381db2cf","license":"MIT OR Apache-2.0","urls":["bzz-raw://809bdb015094de34f0ef90fc6b346842da27a2a52f01cd487f64ea9b9f1f7551","dweb:/ipfs/QmXf24rmY3q5ujvq1M9RYCdoi1o93QnzEsMwN5tPjUVH8C"]},"vault/nomad/Version0.sol":{"keccak256":"0xc102ed18474a58833454fd37fc46473c88235b66cc7997aa71cad52e15314eb7","license":"MIT OR Apache-2.0","urls":["bzz-raw://4ea2a31a323f350e0976f8401602ec83fd2376d74c01e04b57d3c87ea223d269","dweb:/ipfs/QmQ7q9LZooNmRKKsVohNiLvFCkP1P78AuDs94UbbiEFaon"]},"vault/nomad/XAppConnectionClient.sol":{"keccak256":"0x32d2fd767d7ae720f8b8a9e78d3c6163f91eca808edb1786d9ce13f694cbc08d","license":"MIT OR Apache-2.0","urls":["bzz-raw://c6a98135b56560c4f121b426745c4777c8e9196410a7165f7949b294faf55843","dweb:/ipfs/QmdasanwE4PGd7zRvneVLSX3uAwu85MNXfFMJUvPetuWpP"]},"vault/nomad/XAppConnectionManager.sol":{"keccak256":"0x9a19d05c0cdb3fddf162d04c216b953efd522ea195204b5fd30514ba029616a4","license":"MIT OR Apache-2.0","urls":["bzz-raw://31a71400504ba25404f8be7612c68062c9a111e7d0546577c146cfa832dd2f8a","dweb:/ipfs/QmZtNvZf12eyTfdVwYRmSPuhPG5SSZUUo22AKaBt7MQJL4"]},"vault/vendor/v0.8/Address.sol":{"keccak256":"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a","license":"MIT","urls":["bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e","dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r"]},"vault/vendor/v0.8/AddressUpgradeable.sol":{"keccak256":"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d","license":"MIT","urls":["bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f","dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"]},"vault/vendor/v0.8/Context.sol":{"keccak256":"0xbe2b1abcfaee001c5a4ae3b5274803e3f84e1312b1ef7e09265e040beac9c54a","license":"MIT","urls":["bzz-raw://3ab4a5f558658737bb61d1fa85a7d82acae467302fc8a4ef40dccfcf527a8688","dweb:/ipfs/QmaU2BAcwpgaBiKMcEK2f3rDg51ikwLh61sT9uU76XF6as"]},"vault/vendor/v0.8/ContextUpgradeable.sol":{"keccak256":"0x741fb9edb83675bd6b0dd0aa5a267d06b54cc1b93e91ae85deadfd7f7388c9fa","license":"MIT","urls":["bzz-raw://87c2beebb42f26c7b2cf81ba77909b1f441428b4ce9b6af2a9b5d967c3725283","dweb:/ipfs/QmaFtVEJusZXw9Z1XfwxHgfVW9xMFcihHRCqxZYQS9QSTe"]},"vault/vendor/v0.8/ECDSA.sol":{"keccak256":"0x46a0a615f0e2c10c54266e72fcb5c6e726f7e94100f0e79d6ed967ffb0c6c74f","license":"MIT","urls":["bzz-raw://9defa5a8c1b084c25615b2d2a627fc14bbe6bfdb7552ce437a6de7c3ebf6c55d","dweb:/ipfs/QmWgYRyBB5jZahVXgkU7dv4rB2DZqjXYMLNWSk5UVuhXX4"]},"vault/vendor/v0.8/IERC20.sol":{"keccak256":"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da","license":"MIT","urls":["bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b","dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A"]},"vault/vendor/v0.8/IERC20Upgradeable.sol":{"keccak256":"0xce8be5db5e3c4efaef7677186cb624991695a59c2e9c5d2361344514423fb9cf","license":"MIT","urls":["bzz-raw://19b795af0e8299a0568873e70362cba35c16acf53d163707b010d099b6d0e10c","dweb:/ipfs/QmaNouPTAYYMiQeFGvBUAroDNntJqFNbzpD7oANWYMC21H"]},"vault/vendor/v0.8/Initializable2.sol":{"keccak256":"0xec89b5103f4587ed7c2a8ac74c161d290b9b3117c259df962f7f86cc7e6fb017","license":"MIT","urls":["bzz-raw://a22fa5a2787ba96c5fc4d92e38e6bc1ab0f8197f96ed723264f10b66e4ea60fb","dweb:/ipfs/QmTarMFTBCvmwvn1PPA8DLBARngs9WNSdDDeASV9nPb4r4"]},"vault/vendor/v0.8/Ownable.sol":{"keccak256":"0xc9798f4a9c08aa45233d47fa103d1d6ba7c74edcf5a9900c209fe417aef11985","license":"MIT","urls":["bzz-raw://020d5154c18f8d4cd1902f625c5c61fea7417994a02d64f7b9840847dc085e07","dweb:/ipfs/QmUfSTCN8oPqDsF9JAdxNrTmLin21tS8daCFV4cFczicRA"]},"vault/vendor/v0.8/OwnableUpgradeable.sol":{"keccak256":"0x7206c9d97f58333bbc92bc81ecce6a9fa06e4df4f6cb6b21dd03356d9a80c366","license":"MIT","urls":["bzz-raw://241805ddf7e86be41a2ed1689f52c4afc6c444417233d94022ff733ad1f052fc","dweb:/ipfs/QmVJ35dZjUhtihZkNS4Jd5pM2YpsZGwber2DfV7ZJ5Xeab"]},"vault/vendor/v0.8/SafeERC20Upgradeable.sol":{"keccak256":"0x29170c9b007b4e9664a6ef8f8bcd2562abe421d41c760433a2fc175ebfe633a3","license":"MIT","urls":["bzz-raw://828a49296a2cf3f2c4d9a0df749e2f90f319bde6ef8a481a4aea1a17d2fefd45","dweb:/ipfs/Qma5keNi9JSkEBUcpyDK3m4iBucyhftFxqwtKwiUTJxSed"]},"vault/vendor/v0.8/Strings.sol":{"keccak256":"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d","license":"MIT","urls":["bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e","dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7"]}},"version":1}