{"compiler":{"version":"0.8.6+commit.11564f7e"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"renounced","type":"bool"}],"name":"AssetOwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"AssetOwnershipRenunciationProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"renounced","type":"bool"}],"name":"RouterOwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"RouterOwnershipRenunciationProposed","type":"event"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"assetOwnershipTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isAssetOwnershipRenounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isRouterOwnershipRenounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposeAssetOwnershipRenunciation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposeRouterOwnershipRenunciation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceAssetOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceRouterOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"routerOwnershipTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This module is used through inheritance. It will make available the  modifier `onlyOwner`, which can be applied to your functions to restrict  their use to the owner. The majority of this code was taken from the openzeppelin Ownable  contract","kind":"dev","methods":{},"title":"ProposedOwnable","version":1},"userdoc":{"kind":"user","methods":{"acceptProposedOwner()":{"notice":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"assetOwnershipTimestamp()":{"notice":"Returns the timestamp when asset ownership was last proposed to be renounced"},"constructor":{"notice":"Initializes the contract setting the deployer as the initial  owner."},"delay()":{"notice":"Returns the delay period before a new owner can be accepted."},"isAssetOwnershipRenounced()":{"notice":"Indicates if the ownership of the asset whitelist has been renounced"},"isRouterOwnershipRenounced()":{"notice":"Indicates if the ownership of the router whitelist has been renounced"},"owner()":{"notice":"Returns the address of the current owner."},"proposeAssetOwnershipRenunciation()":{"notice":"Indicates if the ownership of the asset whitelist has been renounced"},"proposeNewOwner(address)":{"notice":"Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process"},"proposeRouterOwnershipRenunciation()":{"notice":"Indicates if the ownership of the router whitelist has been renounced"},"proposed()":{"notice":"Returns the address of the proposed owner."},"proposedTimestamp()":{"notice":"Returns the address of the proposed owner."},"renounceAssetOwnership()":{"notice":"Indicates if the ownership of the asset whitelist has been renounced"},"renounceOwnership()":{"notice":"Renounces ownership of the contract after a delay"},"renounceRouterOwnership()":{"notice":"Indicates if the ownership of the asset whitelist has been renounced"},"renounced()":{"notice":"Indicates if the ownership has been renounced() by checking if current owner is address(0)"},"routerOwnershipTimestamp()":{"notice":"Returns the timestamp when router ownership was last proposed to be renounced"}},"notice":"Contract module which provides a basic access control mechanism,  where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed via a two step process: 1. Call `proposeOwner` 2. Wait out the delay period 3. Call `acceptOwner`","version":1}},"settings":{"compilationTarget":{"vault/ProposedOwnable.sol":"ProposedOwnable"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":10000},"remappings":[]},"sources":{"vault/ProposedOwnable.sol":{"keccak256":"0x697eadaacaa2f8be0a504c35e2ff8ba9b218dd4e4ecbe68c6d9b0f6ec22be7f8","license":"UNLICENSED","urls":["bzz-raw://4258e044cb37e31fa8816cd42233905316c2af1db830fe3d65818ecf87b28660","dweb:/ipfs/QmWCHUJH4VJdj7dhBdeQMTeQcNY7CFC2zzFDo5xoiYpJcL"]}},"version":1}