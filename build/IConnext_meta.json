{"compiler":{"version":"0.8.12+commit.f00d7308"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"canonicalId","type":"bytes32"},{"indexed":false,"internalType":"uint32","name":"domain","type":"uint32"},{"indexed":false,"internalType":"address","name":"adoptedAsset","type":"address"},{"indexed":false,"internalType":"address","name":"supportedAsset","type":"address"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"AssetAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"canonicalId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"AssetRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"transferId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"address","name":"router","type":"address"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint32","name":"originDomain","type":"uint32"},{"internalType":"uint32","name":"destinationDomain","type":"uint32"}],"indexed":false,"internalType":"struct IConnext.CallParams","name":"params","type":"tuple"},{"indexed":false,"internalType":"address","name":"localAsset","type":"address"},{"indexed":false,"internalType":"address","name":"transactingAsset","type":"address"},{"indexed":false,"internalType":"uint256","name":"localAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"transactingAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"router","type":"address"},{"indexed":false,"internalType":"address","name":"local","type":"address"},{"indexed":false,"internalType":"bytes32","name":"canonicalId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"LiquidityAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"router","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"address","name":"local","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"LiquidityRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"maxRoutersPerTransfer","type":"uint256"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MaxRoutersPerTransferUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"transferId","type":"bytes32"},{"indexed":true,"internalType":"uint32","name":"origin","type":"uint32"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"address","name":"localAsset","type":"address"},{"indexed":false,"internalType":"uint256","name":"localAmount","type":"uint256"},{"components":[{"internalType":"address[]","name":"routers","type":"address[]"},{"internalType":"uint256","name":"amount","type":"uint256"}],"indexed":false,"internalType":"struct IConnext.ExecutedTransfer","name":"executed","type":"tuple"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"Reconciled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"RelayerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"RelayerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"canonicalId","type":"bytes32"},{"indexed":false,"internalType":"uint32","name":"domain","type":"uint32"},{"indexed":false,"internalType":"address","name":"swapPool","type":"address"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"StableSwapAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"transferId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint32","name":"originDomain","type":"uint32"},{"internalType":"uint32","name":"destinationDomain","type":"uint32"}],"indexed":false,"internalType":"struct IConnext.CallParams","name":"params","type":"tuple"},{"indexed":false,"internalType":"address","name":"transactingAsset","type":"address"},{"indexed":false,"internalType":"address","name":"localAsset","type":"address"},{"indexed":false,"internalType":"uint256","name":"transactingAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"localAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"XCalled","type":"event"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"local","type":"address"}],"name":"addLiquidity","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"local","type":"address"},{"internalType":"address","name":"router","type":"address"}],"name":"addLiquidityFor","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"relayer","type":"address"}],"name":"addRelayer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"router","type":"address"}],"name":"addRelayerFees","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"domain","type":"uint32"},{"internalType":"bytes32","name":"id","type":"bytes32"}],"internalType":"struct BridgeMessage.TokenId","name":"canonical","type":"tuple"},{"internalType":"address","name":"stableSwapPool","type":"address"}],"name":"addStableSwapPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint32","name":"originDomain","type":"uint32"},{"internalType":"uint32","name":"destinationDomain","type":"uint32"}],"internalType":"struct IConnext.CallParams","name":"params","type":"tuple"},{"internalType":"address","name":"local","type":"address"},{"internalType":"address[]","name":"routers","type":"address[]"},{"internalType":"uint32","name":"feePercentage","type":"uint32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"relayerSignature","type":"bytes"},{"internalType":"address","name":"originSender","type":"address"}],"internalType":"struct IConnext.ExecuteArgs","name":"_args","type":"tuple"}],"name":"execute","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_domain","type":"uint256"},{"internalType":"address payable","name":"_bridgeRouter","type":"address"},{"internalType":"address","name":"_tokenRegistry","type":"address"},{"internalType":"address","name":"_wrappedNative","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_transferId","type":"bytes32"},{"internalType":"uint32","name":"_origin","type":"uint32"},{"internalType":"address","name":"_local","type":"address"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"reconcile","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"canonicalId","type":"bytes32"},{"internalType":"address","name":"adoptedAssetId","type":"address"}],"name":"removeAssetId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"local","type":"address"},{"internalType":"address payable","name":"to","type":"address"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"relayer","type":"address"}],"name":"removeRelayer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address payable","name":"to","type":"address"}],"name":"removeRelayerFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"router","type":"address"}],"name":"removeRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMaxRouters","type":"uint256"}],"name":"setMaxRoutersPerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"domain","type":"uint32"},{"internalType":"bytes32","name":"id","type":"bytes32"}],"internalType":"struct BridgeMessage.TokenId","name":"canonical","type":"tuple"},{"internalType":"address","name":"adoptedAssetId","type":"address"},{"internalType":"address","name":"stableSwapPool","type":"address"}],"name":"setupAsset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"router","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"recipient","type":"address"}],"name":"setupRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint32","name":"originDomain","type":"uint32"},{"internalType":"uint32","name":"destinationDomain","type":"uint32"}],"internalType":"struct IConnext.CallParams","name":"params","type":"tuple"},{"internalType":"address","name":"transactingAssetId","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IConnext.XCallArgs","name":"_args","type":"tuple"}],"name":"xcall","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"}],"devdoc":{"events":{"AssetAdded(bytes32,uint32,address,address,address)":{"params":{"adoptedAsset":"- The address of the adopted (user-expected) asset","caller":"- The account that called the function","canonicalId":"- The canonical identifier of the token the local <> adopted AMM is for","domain":"- The domain of the canonical token for the local <> adopted amm","supportedAsset":"- The address of the whitelisted asset. If the native asset is to be whitelisted, the address of the wrapped version will be stored"}},"AssetRemoved(bytes32,address)":{"params":{"caller":"- The account that called the function","canonicalId":"- The canonical identifier of the token removed"}},"Executed(bytes32,address,address,(address,bytes,uint32,uint32),address,address,uint256,uint256,address)":{"details":"`execute` may be called when providing fast liquidity *or* when processing a reconciled transfer","params":{"caller":"- The account that called the function","localAmount":"- The amount that was provided by the bridge","localAsset":"- The asset that was provided by the bridge","params":"- The CallParams provided to the function","router":"- The router that supplied fast liquidity, if applicable","to":"- The CallParams.to provided, created as indexed parameter","transactingAmount":"- The amount of transferring asset the to address receives or the external call is executed with","transactingAsset":"- The asset the to gets or the external call is executed with. Should be the adopted asset on that chain.","transferId":"- The unique identifier of the crosschain transfer"}},"LiquidityAdded(address,address,bytes32,uint256,address)":{"params":{"amount":"- The amount of liquidity added","caller":"- The account that called the function","local":"- The address of the token added (all liquidity held in local asset)","router":"- The address of the router the funds were credited to"}},"LiquidityRemoved(address,address,address,uint256,address)":{"params":{"amount":"- The amount of liquidity withdrawn","caller":"- The account that called the function","local":"- The address of the token withdrawn","router":"- The router you are removing liquidity from","to":"- The address the funds were withdrawn to"}},"MaxRoutersPerTransferUpdated(uint256,address)":{"params":{"caller":"- The account that called the function","maxRoutersPerTransfer":"- The maxRoutersPerTransfer new value"}},"Reconciled(bytes32,uint32,address,address,uint256,(address[],uint256),address)":{"params":{"caller":"- The account that called the function","executed":"- Record of the `ExecutedTransfer` stored onchain if fast liquidity is provided","localAmount":"- The amount that was provided by the bridge","localAsset":"- The asset that was provided by the bridge","origin":"- The origin domain of the transfer","to":"- The CallParams.recipient provided, created as indexed parameter","transferId":"- The unique identifier of the crosschain transaction"}},"RelayerAdded(address,address)":{"params":{"caller":"- The account that called the function","relayer":"- The relayer address to be added or removed"}},"RelayerRemoved(address,address)":{"params":{"caller":"- The account that called the function","relayer":"- The relayer address to be added or removed"}},"StableSwapAdded(bytes32,uint32,address,address)":{"params":{"caller":"- The account that called the function","canonicalId":"- The canonical identifier of the token the local <> adopted AMM is for","domain":"- The domain of the canonical token for the local <> adopted amm","swapPool":"- The address of the AMM"}},"XCalled(bytes32,address,(address,bytes,uint32,uint32),address,address,uint256,uint256,uint256,address)":{"params":{"caller":"- The account that called the function","localAmount":"- The amount sent over the bridge (initialAmount with slippage)","localAsset":"- The asset sent over the bridge. Will be the local asset of nomad that corresponds to the provided `transactingAsset`","nonce":"- The nonce of the origin domain contract. Used to create the unique identifier for the transfer","params":"- The CallParams provided to the function","to":"- The CallParams.to provided, created as indexed parameter","transactingAmount":"- The amount of transferring asset the tx xcalled with","transactingAsset":"- The asset the caller sent with the transfer. Can be the adopted, canonical, or the representational asset","transferId":"- The unique identifier of the crosschain transfer"}}},"kind":"dev","methods":{},"version":1},"userdoc":{"events":{"AssetAdded(bytes32,uint32,address,address,address)":{"notice":"Emitted when a new asset is added"},"AssetRemoved(bytes32,address)":{"notice":"Emitted when an asset is removed from whitelists"},"Executed(bytes32,address,address,(address,bytes,uint32,uint32),address,address,uint256,uint256,address)":{"notice":"Emitted when `execute` is called on the destination chain"},"LiquidityAdded(address,address,bytes32,uint256,address)":{"notice":"Emitted when a router adds liquidity to the contract"},"LiquidityRemoved(address,address,address,uint256,address)":{"notice":"Emitted when a router withdraws liquidity from the contract"},"MaxRoutersPerTransferUpdated(uint256,address)":{"notice":"Emitted when the maxRoutersPerTransfer variable is updated"},"Reconciled(bytes32,uint32,address,address,uint256,(address[],uint256),address)":{"notice":"Emitted when `reconciled` is called by the bridge on the destination domain"},"RelayerAdded(address,address)":{"notice":"Emitted when a rlayer is added or removed from whitelists"},"RelayerRemoved(address,address)":{"notice":"Emitted when a rlayer is added or removed from whitelists"},"StableSwapAdded(bytes32,uint32,address,address)":{"notice":"Emitted when a new stable-swap AMM is added for the local <> adopted token"},"XCalled(bytes32,address,(address,bytes,uint32,uint32),address,address,uint256,uint256,uint256,address)":{"notice":"Emitted when `xcall` is called on the origin domain"}},"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"vault/interfaces/IConnext.sol":"IConnext"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":10000},"remappings":[]},"sources":{"vault/interfaces/IConnext.sol":{"keccak256":"0x7ad0814c531330080539bb0600462abf49af681bda0fc1c9a60ed8ca0a2fb757","license":"UNLICENSED","urls":["bzz-raw://25e0b70973d900fe2917a8732136d5b33c666c80b25d259ed1b1ba2b341243ed","dweb:/ipfs/QmPxcjdHLUQmKftVf78PFHuxearqmBu8au2k8JCf5tc4p5"]},"vault/lib/TypedMemView.sol":{"keccak256":"0xaaa1d49d3ca939e49b369adcf5bf028d0d259821af57d4fa4229177eb8932936","license":"MIT OR Apache-2.0","urls":["bzz-raw://10691d24a257dc2e79cd779812c52571474239c9b1989fc63a803d5936b14fec","dweb:/ipfs/QmVERCmFdsEeuVpS2BxvJUttRaaDf6W7FjQJRFX2qnBU98"]},"vault/nomad/BridgeMessage.sol":{"keccak256":"0x0bb5242debd7af9b80f00c48224d4d237e0a6abcdd0d7f59bbca9a0cd21fdf05","license":"MIT OR Apache-2.0","urls":["bzz-raw://d4749bbce9cdf7b84b0c1eaa447e27d3aef4e6a29afd548d8c9698f26e9c082b","dweb:/ipfs/QmYwMT3kEqvF4fVg3eVdHJ9R9HwxAigX3VuPqQjiRFCzGi"]}},"version":1}